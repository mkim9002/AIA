{"trial_id": "1", "hyperparameters": {"space": [{"class_name": "Boolean", "config": {"name": "image_block_1/normalize", "default": false, "conditions": []}}, {"class_name": "Boolean", "config": {"name": "image_block_1/augment", "default": false, "conditions": []}}, {"class_name": "Choice", "config": {"name": "image_block_1/block_type", "default": "resnet", "conditions": [], "values": ["resnet", "xception", "vanilla", "efficient"], "ordered": false}}, {"class_name": "Boolean", "config": {"name": "image_block_1/res_net_block_1/pretrained", "default": false, "conditions": [{"class_name": "Parent", "config": {"name": "image_block_1/block_type", "values": ["resnet"]}}]}}, {"class_name": "Choice", "config": {"name": "image_block_1/res_net_block_1/version", "default": "resnet50", "conditions": [{"class_name": "Parent", "config": {"name": "image_block_1/block_type", "values": ["resnet"]}}], "values": ["resnet50", "resnet101", "resnet152", "resnet50_v2", "resnet101_v2", "resnet152_v2"], "ordered": false}}, {"class_name": "Boolean", "config": {"name": "image_block_1/res_net_block_1/imagenet_size", "default": false, "conditions": [{"class_name": "Parent", "config": {"name": "image_block_1/block_type", "values": ["resnet"]}}]}}, {"class_name": "Choice", "config": {"name": "classification_head_1/spatial_reduction_1/reduction_type", "default": "flatten", "conditions": [], "values": ["flatten", "global_max", "global_avg"], "ordered": false}}, {"class_name": "Choice", "config": {"name": "classification_head_1/dropout", "default": 0, "conditions": [], "values": [0.0, 0.25, 0.5], "ordered": true}}, {"class_name": "Choice", "config": {"name": "optimizer", "default": "adam", "conditions": [], "values": ["adam", "sgd", "adam_weight_decay"], "ordered": false}}, {"class_name": "Choice", "config": {"name": "learning_rate", "default": 0.001, "conditions": [], "values": [0.1, 0.01, 0.001, 0.0001, 2e-05, 1e-05], "ordered": true}}, {"class_name": "Choice", "config": {"name": "image_block_1/conv_block_1/kernel_size", "default": 3, "conditions": [{"class_name": "Parent", "config": {"name": "image_block_1/block_type", "values": ["vanilla"]}}], "values": [3, 5, 7], "ordered": true}}, {"class_name": "Boolean", "config": {"name": "image_block_1/conv_block_1/separable", "default": false, "conditions": [{"class_name": "Parent", "config": {"name": "image_block_1/block_type", "values": ["vanilla"]}}]}}, {"class_name": "Boolean", "config": {"name": "image_block_1/conv_block_1/max_pooling", "default": true, "conditions": [{"class_name": "Parent", "config": {"name": "image_block_1/block_type", "values": ["vanilla"]}}]}}, {"class_name": "Choice", "config": {"name": "image_block_1/conv_block_1/num_blocks", "default": 2, "conditions": [{"class_name": "Parent", "config": {"name": "image_block_1/block_type", "values": ["vanilla"]}}], "values": [1, 2, 3], "ordered": true}}, {"class_name": "Choice", "config": {"name": "image_block_1/conv_block_1/num_layers", "default": 2, "conditions": [{"class_name": "Parent", "config": {"name": "image_block_1/block_type", "values": ["vanilla"]}}], "values": [1, 2], "ordered": true}}, {"class_name": "Choice", "config": {"name": "image_block_1/conv_block_1/filters_0_0", "default": 32, "conditions": [{"class_name": "Parent", "config": {"name": "image_block_1/block_type", "values": ["vanilla"]}}], "values": [16, 32, 64, 128, 256, 512], "ordered": true}}, {"class_name": "Choice", "config": {"name": "image_block_1/conv_block_1/filters_0_1", "default": 32, "conditions": [{"class_name": "Parent", "config": {"name": "image_block_1/block_type", "values": ["vanilla"]}}], "values": [16, 32, 64, 128, 256, 512], "ordered": true}}, {"class_name": "Choice", "config": {"name": "image_block_1/conv_block_1/dropout", "default": 0.0, "conditions": [{"class_name": "Parent", "config": {"name": "image_block_1/block_type", "values": ["vanilla"]}}], "values": [0.0, 0.25, 0.5], "ordered": true}}, {"class_name": "Choice", "config": {"name": "image_block_1/image_augmentation_1/translation_factor", "default": 0.0, "conditions": [{"class_name": "Parent", "config": {"name": "image_block_1/augment", "values": [true]}}], "values": [0.0, 0.1], "ordered": true}}, {"class_name": "Boolean", "config": {"name": "image_block_1/image_augmentation_1/horizontal_flip", "default": true, "conditions": [{"class_name": "Parent", "config": {"name": "image_block_1/augment", "values": [true]}}]}}, {"class_name": "Boolean", "config": {"name": "image_block_1/image_augmentation_1/vertical_flip", "default": true, "conditions": [{"class_name": "Parent", "config": {"name": "image_block_1/augment", "values": [true]}}]}}, {"class_name": "Choice", "config": {"name": "image_block_1/image_augmentation_1/rotation_factor", "default": 0.0, "conditions": [{"class_name": "Parent", "config": {"name": "image_block_1/augment", "values": [true]}}], "values": [0.0, 0.1], "ordered": true}}, {"class_name": "Choice", "config": {"name": "image_block_1/image_augmentation_1/zoom_factor", "default": 0.0, "conditions": [{"class_name": "Parent", "config": {"name": "image_block_1/augment", "values": [true]}}], "values": [0.0, 0.1], "ordered": true}}, {"class_name": "Choice", "config": {"name": "image_block_1/image_augmentation_1/contrast_factor", "default": 0.0, "conditions": [{"class_name": "Parent", "config": {"name": "image_block_1/augment", "values": [true]}}], "values": [0.0, 0.1], "ordered": true}}], "values": {"image_block_1/block_type": "resnet", "image_block_1/normalize": true, "image_block_1/augment": true, "image_block_1/image_augmentation_1/horizontal_flip": true, "image_block_1/image_augmentation_1/vertical_flip": true, "image_block_1/image_augmentation_1/contrast_factor": 0.0, "image_block_1/image_augmentation_1/rotation_factor": 0.0, "image_block_1/image_augmentation_1/translation_factor": 0.1, "image_block_1/image_augmentation_1/zoom_factor": 0.0, "image_block_1/res_net_block_1/pretrained": false, "image_block_1/res_net_block_1/version": "resnet50", "image_block_1/res_net_block_1/imagenet_size": true, "classification_head_1/spatial_reduction_1/reduction_type": "global_avg", "classification_head_1/dropout": 0, "optimizer": "adam", "learning_rate": 0.001}}, "metrics": {"metrics": {}}, "score": null, "best_step": 0, "status": "FAILED", "message": "Traceback (most recent call last):\n  File \"C:\\Users\\bitcamp\\anaconda3\\envs\\autokeras\\lib\\site-packages\\keras_tuner\\engine\\base_tuner.py\", line 270, in _try_run_and_update_trial\n    self._run_and_update_trial(trial, *fit_args, **fit_kwargs)\n  File \"C:\\Users\\bitcamp\\anaconda3\\envs\\autokeras\\lib\\site-packages\\keras_tuner\\engine\\base_tuner.py\", line 235, in _run_and_update_trial\n    results = self.run_trial(trial, *fit_args, **fit_kwargs)\n  File \"C:\\Users\\bitcamp\\anaconda3\\envs\\autokeras\\lib\\site-packages\\keras_tuner\\engine\\tuner.py\", line 287, in run_trial\n    obj_value = self._build_and_fit_model(trial, *args, **copied_kwargs)\n  File \"C:\\Users\\bitcamp\\anaconda3\\envs\\autokeras\\lib\\site-packages\\autokeras\\engine\\tuner.py\", line 101, in _build_and_fit_model\n    _, history = utils.fit_with_adaptive_batch_size(\n  File \"C:\\Users\\bitcamp\\anaconda3\\envs\\autokeras\\lib\\site-packages\\autokeras\\utils\\utils.py\", line 88, in fit_with_adaptive_batch_size\n    history = run_with_adaptive_batch_size(\n  File \"C:\\Users\\bitcamp\\anaconda3\\envs\\autokeras\\lib\\site-packages\\autokeras\\utils\\utils.py\", line 101, in run_with_adaptive_batch_size\n    history = func(x=x, validation_data=validation_data, **fit_kwargs)\n  File \"C:\\Users\\bitcamp\\anaconda3\\envs\\autokeras\\lib\\site-packages\\autokeras\\utils\\utils.py\", line 89, in <lambda>\n    batch_size, lambda **kwargs: model.fit(**kwargs), **fit_kwargs\n  File \"C:\\Users\\bitcamp\\anaconda3\\envs\\autokeras\\lib\\site-packages\\keras\\utils\\traceback_utils.py\", line 67, in error_handler\n    raise e.with_traceback(filtered_tb) from None\n  File \"C:\\Users\\bitcamp\\anaconda3\\envs\\autokeras\\lib\\site-packages\\tensorflow\\python\\framework\\ops.py\", line 7186, in raise_from_not_ok_status\n    raise core._status_to_exception(e) from None  # pylint: disable=protected-access\ntensorflow.python.framework.errors_impl.InternalError: Failed copying input tensor from /job:localhost/replica:0/task:0/device:GPU:0 to /job:localhost/replica:0/task:0/device:CPU:0 in order to run Identity: Dst tensor is not initialized. [Op:Identity]\n"}